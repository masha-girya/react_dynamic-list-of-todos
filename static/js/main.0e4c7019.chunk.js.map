{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","onShowInfo","selectedUserId","selectedTodo","className","map","todo","isSelectedTodo","id","isSelectedUser","userId","classNames","completed","title","type","onClick","TodoFilter","onGetStatusTodos","onGetQuery","query","value","placeholder","onChange","event","target","style","pointerEvents","length","Loader","TodoModal","user","onCloseInfo","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","setSelectedUserId","setSelectedTodo","todoStatus","setTodoStatus","setQuery","setUser","useEffect","todosFromServer","showInfo","a","filteredTodos","filter","Error","normalizedQuery","toLocaleLowerCase","includes","choosedTodoStatus","text","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e4c7019.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  onShowInfo: (id: number, todo: Todo) => Promise<void>,\n  selectedUserId: number,\n  selectedTodo: Todo | null,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onShowInfo,\n  selectedUserId,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const isSelectedTodo = todo.id === selectedTodo?.id;\n        const isSelectedUser = todo.userId === selectedUserId;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': isSelectedUser,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )\n              : <td className=\"is-vcentered\" />}\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames('has-text-success', {\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onShowInfo(todo.userId, todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': isSelectedTodo,\n                    'fa-eye': !isSelectedTodo,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","interface Props {\n  onGetStatusTodos: (choosedTodoStatus: string) => void,\n  onGetQuery: (text: string) => void,\n  query: string,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  onGetStatusTodos,\n  onGetQuery,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select data-cy=\"todoStatusSelect\">\n          <option\n            value=\"all\"\n            onClick={() => onGetStatusTodos('all')}\n          >\n            All\n          </option>\n          <option\n            value=\"active\"\n            onClick={() => onGetStatusTodos('active')}\n          >\n            Active\n          </option>\n          <option\n            value=\"completed\"\n            onClick={() => onGetStatusTodos('completed')}\n          >\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onGetQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query.length !== 0 && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onGetQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  user: User | null,\n  todo: Todo,\n  onCloseInfo: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  todo,\n  onCloseInfo,\n}) => (\n  <div className=\"modal is-active\" data-cy=\"modal\">\n    <div className=\"modal-background\" />\n\n    {!user\n      ? <Loader />\n      : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseInfo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todoStatus, setTodoStatus] = useState('all');\n  const [query, setQuery] = useState('');\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => setTodos(todosFromServer));\n  }, []);\n\n  const showInfo = async (id: number, todo: Todo) => {\n    setSelectedUserId(id);\n    setSelectedTodo(todo);\n    setUser(await getUser(id));\n  };\n\n  const closeInfo = () => {\n    setSelectedTodo(null);\n    setSelectedUserId(0);\n    setUser(null);\n  };\n\n  const getQuery = (text: string) => {\n    setQuery(text);\n  };\n\n  const getStatusedTodos = (choosedTodoStatus: string) => {\n    setTodoStatus(choosedTodoStatus);\n  };\n\n  let filteredTodos = todos.filter(todo => {\n    switch (todoStatus) {\n      case 'all':\n        return todo;\n\n      case 'active':\n        return !todo.completed;\n\n      case 'completed':\n        return todo.completed;\n\n      default:\n        throw new Error('Incorrect todoStatus');\n    }\n  });\n\n  filteredTodos = filteredTodos.filter(todo => {\n    const normalizedQuery = query.toLocaleLowerCase();\n    const normalizedTitle = todo.title.toLocaleLowerCase();\n\n    return (\n      normalizedTitle.includes(normalizedQuery)\n    );\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onGetStatusTodos={getStatusedTodos}\n                onGetQuery={getQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    onShowInfo={showInfo}\n                    selectedUserId={selectedUserId}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          user={user}\n          todo={selectedTodo}\n          onCloseInfo={closeInfo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}