{"version":3,"sources":["types/TodoStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoStatus","TodoList","todos","onShowInfo","selectedTodo","className","map","todo","isSelectedTodo","id","classNames","completed","title","type","onClick","TodoFilter","onChangeStatusTodos","todoStatus","onChangeQuery","query","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","length","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","onCloseInfo","useState","user","setUser","loader","setLoader","loadUser","a","loadedUser","useEffect","href","email","name","App","setTodos","setSelectedTodo","setTodoStatus","setQuery","filter","normalizedQuery","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9e343c5.chunk.js","sourcesContent":["export enum TodoStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  onShowInfo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onShowInfo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const isSelectedTodo = todo.id === selectedTodo?.id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': isSelectedTodo,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onShowInfo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={isSelectedTodo\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { TodoStatus } from '../../types/TodoStatus';\n\ninterface Props {\n  onChangeStatusTodos: (choosedTodoStatus: TodoStatus) => void,\n  todoStatus: TodoStatus,\n  onChangeQuery: (text: string) => void,\n  query: string,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChangeStatusTodos,\n  todoStatus,\n  onChangeQuery,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={todoStatus}\n          onChange={(event) => (\n            onChangeStatusTodos(event.target.value as TodoStatus)\n          )}\n        >\n          <option\n            value={TodoStatus.ALL}\n          >\n            All\n          </option>\n          <option\n            value={TodoStatus.ACTIVE}\n          >\n            Active\n          </option>\n          <option\n            value={TodoStatus.COMPLETED}\n          >\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onChangeQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query.length !== 0 && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onChangeQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo,\n  onCloseInfo: (todo: null) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onCloseInfo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loader, setLoader] = useState(false);\n\n  const loadUser = async (userId: number) => {\n    const loadedUser = await getUser(userId);\n\n    if (loadedUser) {\n      setUser(loadedUser);\n    } else {\n      setUser(null);\n    }\n\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    setLoader(true);\n\n    loadUser(todo.userId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loader\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => onCloseInfo(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoStatus } from './types/TodoStatus';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todoStatus, setTodoStatus] = useState(TodoStatus.ALL);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const getVisibleTodos = () => {\n    return todos.filter(todo => {\n      const normalizedQuery = query.toLocaleLowerCase();\n\n      switch (todoStatus) {\n        case TodoStatus.ALL:\n          return todo.title.includes(normalizedQuery);\n\n        case TodoStatus.ACTIVE:\n          return !todo.completed && todo.title.includes(normalizedQuery);\n\n        case TodoStatus.COMPLETED:\n          return todo.completed && todo.title.includes(normalizedQuery);\n\n        default:\n          return todo;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeStatusTodos={setTodoStatus}\n                todoStatus={todoStatus}\n                onChangeQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={getVisibleTodos()}\n                    onShowInfo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onCloseInfo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}